openapi: 3.0.1
info:
  title: Config API
  description: ASP.NET Core Web API
  version: v1
paths:
  /api/Instructions:
    get:
      tags:
        - Instructions
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instructions'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instructions'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instructions'
    post:
      tags:
        - Instructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstructionCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateInstructionCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateInstructionCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Instructions'
            application/json:
              schema:
                $ref: '#/components/schemas/Instructions'
            text/json:
              schema:
                $ref: '#/components/schemas/Instructions'
  /api/Instructions/{id}:
    get:
      tags:
        - Instructions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Instructions'
            application/json:
              schema:
                $ref: '#/components/schemas/Instructions'
            text/json:
              schema:
                $ref: '#/components/schemas/Instructions'
    put:
      tags:
        - Instructions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instructions'
          text/json:
            schema:
              $ref: '#/components/schemas/Instructions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Instructions'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: uuid
            application/json:
              schema:
                type: string
                format: uuid
            text/json:
              schema:
                type: string
                format: uuid
    delete:
      tags:
        - Instructions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: uuid
            application/json:
              schema:
                type: string
                format: uuid
            text/json:
              schema:
                type: string
                format: uuid
  /api/Users/authenticate:
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Success
  /api/Users:
    get:
      tags:
        - Users
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/Users/{id}:
    get:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    delete:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
components:
  schemas:
    CreateInstructionCommand:
      type: object
      properties:
        Title:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        Progress:
          type: string
          nullable: true
        Isactive:
          type: boolean
        CreatedDate:
          type: string
          nullable: true
        StartDate:
          type: string
          nullable: true
        EndDate:
          type: string
          nullable: true
        Image:
          type: string
          nullable: true
      additionalProperties: false
    CreateUserCommand:
      type: object
      properties:
        UserName:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        Password:
          type: string
          nullable: true
        Role:
          type: string
          nullable: true
      additionalProperties: false
    Instructions:
      type: object
      properties:
        Id:
          type: string
          nullable: true
        Title:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        Progress:
          type: string
          nullable: true
        Isactive:
          type: boolean
        CreatedDate:
          type: string
          nullable: true
        StartDate:
          type: string
          nullable: true
        EndDate:
          type: string
          nullable: true
        Image:
          type: string
          nullable: true
      additionalProperties: false
    LoginDto:
      type: object
      properties:
        UserName:
          type: string
          nullable: true
        Password:
          type: string
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        Id:
          type: string
          nullable: true
        UserName:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        Password:
          type: string
          nullable: true
        Role:
          type: string
          nullable: true
      additionalProperties: false
